package project1.reesebenson.Parsers;

import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import org.junit.Test;

public class MvnOutputParserTest {

    @Test
    public void buildParseTest(){
        assertTrue(MvnOutputParser.parseCompileForSuccess("build success"));
        assertFalse(MvnOutputParser.parseCompileForSuccess("this is a failing string"));
        assertTrue(MvnOutputParser.parseCompileForSuccess("[INFO] Scanning for projects...\n[INFO] \n[INFO] -------------------< project1.reesebenson:project1 >--------------------\n[INFO] Building project1 1.0\n[INFO] --------------------------------[ jar ]---------------------------------\n[INFO] \n[INFO] --- maven-clean-plugin:3.1.0:clean (default-clean) @ project1 ---\n[INFO] Deleting \\project1\\target\n[INFO] \n[INFO] --- maven-resources-plugin:3.0.2:resources (default-resources) @ project1 ---\n[INFO] Using 'UTF-8' encoding to copy filtered resources.\n[INFO] skip non existing resourceDirectory project1\\src\\main\\resources\n[INFO] \n[INFO] --- maven-compiler-plugin:3.8.0:compile (default-compile) @ project1 ---\n[INFO] Changes detected - recompiling the module!\n[INFO] Compiling 22 source files to project1\\target\\classes\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD SUCCESS\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  1.809 s\n[INFO] Finished at: 2020-09-02T14:15:04-07:00\n[INFO] ------------------------------------------------------------------------\n"));
    }

    @Test
    public void TestParseTest(){
        // check with both errors and failures
        assertFalse(MvnOutputParser.parseTestForSuccess("[INFO] Scanning for projects...\n[INFO] \n[INFO] -------------------< project1.reesebenson:project1 >--------------------\n[INFO] Building project1 1.0\n[INFO] --------------------------------[ jar ]---------------------------------\n[INFO] \n[INFO] --- maven-resources-plugin:3.0.2:resources (default-resources) @ project1 ---\n[INFO] Using 'UTF-8' encoding to copy filtered resources.\n[INFO] skip non existing resourceDirectory project1\\src\\main\\resources\n[INFO] \n[INFO] --- maven-compiler-plugin:3.8.0:compile (default-compile) @ project1 ---\n[INFO] Nothing to compile - all classes are up to date\n[INFO]\n[INFO] --- maven-resources-plugin:3.0.2:testResources (default-testResources) @ project1 ---\n[INFO] Using 'UTF-8' encoding to copy filtered resources.\n[INFO] skip non existing resourceDirectory \\src\\test\\resources\n[INFO] \n[INFO] --- maven-compiler-plugin:3.8.0:testCompile (default-testCompile) @ project1 ---\n[INFO] Changes detected - recompiling the module!\n[INFO] Compiling 3 source files to \\target\\test-classes\n[INFO] \n[INFO] --- maven-surefire-plugin:2.22.1:test (default-test) @ project1 ---\n[INFO] \n[INFO] -------------------------------------------------------\n[INFO]  T E S T S\n[INFO] -------------------------------------------------------\n[INFO] Running project1.reesebenson.AppTest\n[ERROR] Tests run: 1, Failures: 1, Errors: 0, Skipped: 0, Time elapsed: 0.05 s <<< FAILURE! - in project1.reesebenson.AppTest\n[ERROR] shouldAnswerWithTrue(project1.reesebenson.AppTest)  Time elapsed: 0.007 s  <<< FAILURE!\njava.lang.AssertionError\n        at project1.reesebenson.AppTest.shouldAnswerWithTrue(AppTest.java:18)\n[INFO] Running project1.reesebenson.Parsers.GitParserTest\n[INFO] Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.042 s - in project1.reesebenson.Parsers.GitParserTest\n[INFO] Running project1.reesebenson.Parsers.MvnOutputParserTest\n[ERROR] Tests run: 2, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 0.001 s <<< FAILURE! - in project1.reesebenson.Parsers.MvnOutputParserTest\n[ERROR] TestParseTest(project1.reesebenson.Parsers.MvnOutputParserTest)  Time elapsed: 0 s  <<< ERROR!\njava.lang.ArrayIndexOutOfBoundsException: Index 1 out of bounds for length 1\n        at project1.reesebenson.Parsers.MvnOutputParserTest.TestParseTest(MvnOutputParserTest.java:19)\n"));
        // check with errors
        assertFalse(MvnOutputParser.parseTestForSuccess("[INFO] Scanning for projects...\n[INFO] \n[INFO] -------------------< project1.reesebenson:project1 >--------------------\n[INFO] Building project1 1.0\n[INFO] --------------------------------[ jar ]---------------------------------\n[INFO] \n[INFO] --- maven-resources-plugin:3.0.2:resources (default-resources) @ project1 ---\n[INFO] Using 'UTF-8' encoding to copy filtered resources.\n[INFO] skip non existing resourceDirectory project1\\src\\main\\resources\n[INFO] \n[INFO] --- maven-compiler-plugin:3.8.0:compile (default-compile) @ project1 ---\n[INFO] Nothing to compile - all classes are up to date\n[INFO]\n[INFO] --- maven-resources-plugin:3.0.2:testResources (default-testResources) @ project1 ---\n[INFO] Using 'UTF-8' encoding to copy filtered resources.\n[INFO] skip non existing resourceDirectory \\src\\test\\resources\n[INFO] \n[INFO] --- maven-compiler-plugin:3.8.0:testCompile (default-testCompile) @ project1 ---\n[INFO] Changes detected - recompiling the module!\n[INFO] Compiling 3 source files to \\target\\test-classes\n[INFO] \n[INFO] --- maven-surefire-plugin:2.22.1:test (default-test) @ project1 ---\n[INFO] \n[INFO] -------------------------------------------------------\n[INFO]  T E S T S\n[INFO] -------------------------------------------------------\n[INFO] Running project1.reesebenson.Parsers.GitParserTest\n[INFO] Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.042 s - in project1.reesebenson.Parsers.GitParserTest\n[INFO] Running project1.reesebenson.Parsers.MvnOutputParserTest\n[ERROR] Tests run: 2, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 0.001 s <<< FAILURE! - in project1.reesebenson.Parsers.MvnOutputParserTest\n[ERROR] TestParseTest(project1.reesebenson.Parsers.MvnOutputParserTest)  Time elapsed: 0 s  <<< ERROR!\njava.lang.ArrayIndexOutOfBoundsException: Index 1 out of bounds for length 1\n        at project1.reesebenson.Parsers.MvnOutputParserTest.TestParseTest(MvnOutputParserTest.java:19)\n"));
        // check with only failures
        assertFalse(MvnOutputParser.parseTestForSuccess("[INFO] Scanning for projects...\n[INFO] \n[INFO] -------------------< project1.reesebenson:project1 >--------------------\n[INFO] Building project1 1.0\n[INFO] --------------------------------[ jar ]---------------------------------\n[INFO] \n[INFO] --- maven-resources-plugin:3.0.2:resources (default-resources) @ project1 ---\n[INFO] Using 'UTF-8' encoding to copy filtered resources.\n[INFO] skip non existing resourceDirectory project1\\src\\main\\resources\n[INFO] \n[INFO] --- maven-compiler-plugin:3.8.0:compile (default-compile) @ project1 ---\n[INFO] Nothing to compile - all classes are up to date\n[INFO]\n[INFO] --- maven-resources-plugin:3.0.2:testResources (default-testResources) @ project1 ---\n[INFO] Using 'UTF-8' encoding to copy filtered resources.\n[INFO] skip non existing resourceDirectory \\src\\test\\resources\n[INFO] \n[INFO] --- maven-compiler-plugin:3.8.0:testCompile (default-testCompile) @ project1 ---\n[INFO] Changes detected - recompiling the module!\n[INFO] Compiling 3 source files to \\target\\test-classes\n[INFO] \n[INFO] --- maven-surefire-plugin:2.22.1:test (default-test) @ project1 ---\n[INFO] \n[INFO] -------------------------------------------------------\n[INFO]  T E S T S\n[INFO] -------------------------------------------------------\n[INFO] Running project1.reesebenson.AppTest\n[ERROR] Tests run: 1, Failures: 1, Errors: 0, Skipped: 0, Time elapsed: 0.05 s <<< FAILURE! - in project1.reesebenson.AppTest\n[ERROR] shouldAnswerWithTrue(project1.reesebenson.AppTest)  Time elapsed: 0.007 s  <<< FAILURE!\njava.lang.AssertionError\n        at project1.reesebenson.AppTest.shouldAnswerWithTrue(AppTest.java:18)\n[INFO] Running project1.reesebenson.Parsers.GitParserTest\n[INFO] Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.042 s - in project1.reesebenson.Parsers.GitParserTest\n[INFO] Running project1.reesebenson.Parsers.MvnOutputParserTest\n"));
        // check for success
        assertTrue(MvnOutputParser.parseTestForSuccess("[INFO] Scanning for projects...\n[INFO] \n[INFO] -------------------< project1.reesebenson:project1 >--------------------\n[INFO] Building project1 1.0\n[INFO] --------------------------------[ jar ]---------------------------------\n[INFO] \n[INFO] --- maven-resources-plugin:3.0.2:resources (default-resources) @ project1 ---\n[INFO] Using 'UTF-8' encoding to copy filtered resources.\n[INFO] skip non existing resourceDirectory \\project1\\src\\main\\resources\n[INFO] \n[INFO] --- maven-compiler-plugin:3.8.0:compile (default-compile) @ project1 ---\n[INFO] Nothing to compile - all classes are up to date\n[INFO] \n[INFO] --- maven-resources-plugin:3.0.2:testResources (default-testResources) @ project1 ---\n[INFO] Using 'UTF-8' encoding to copy filtered resources.\n[INFO] skip non existing resourceDirectory \\project1\\src\\test\\resources\n[INFO] \n[INFO] --- maven-compiler-plugin:3.8.0:testCompile (default-testCompile) @ project1 ---\n[INFO] Nothing to compile - all classes are up to date\n[INFO] \n[INFO] --- maven-surefire-plugin:2.22.1:test (default-test) @ project1 ---\n[INFO] \n[INFO] -------------------------------------------------------\n[INFO]  T E S T S\n[INFO] -------------------------------------------------------\n[INFO] Running project1.reesebenson.AppTest\n[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.035 s - in project1.reesebenson.AppTest\n[INFO] Running project1.reesebenson.Parsers.GitParserTest\n[INFO] Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.003 s - in project1.reesebenson.Parsers.GitParserTest\n[INFO] Running project1.reesebenson.Parsers.MvnOutputParserTest\n[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0 s - in project1.reesebenson.Parsers.MvnOutputParserTest\n[INFO] \n[INFO] Results:\n[INFO] \n[INFO] Tests run: 6, Failures: 0, Errors: 0, Skipped: 0\n[INFO] \n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD SUCCESS\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  1.955 s\n[INFO] Finished at: 2020-09-02T14:37:30-07:00\n[INFO] ------------------------------------------------------------------------\n"));
    }
}
